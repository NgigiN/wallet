name: Deploy to Server

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    concurrency:
      group: deploy-${{ github.ref }}
      cancel-in-progress: false

    steps:
    - uses: actions/checkout@v4

    - name: Deploy and Start Docker Container
      env:
        DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
        DISCORD_CHANNEL_ID: ${{ secrets.DISCORD_CHANNEL_ID }}
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_PORT }}
        script: |
          cd /home/deploy/opt/wallet
          git pull origin main

          chmod +x start_app.sh

          # Pass the secrets to the script
          DISCORD_BOT_TOKEN="${DISCORD_BOT_TOKEN}" DISCORD_CHANNEL_ID="${DISCORD_CHANNEL_ID}" ./start_app.sh

    - name: Health Check
      run: sleep 10

    - name: Verify Docker Container is Running
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_PORT }}
        script: |
          cd /home/deploy/opt/wallet

          # Check if Docker container is running
          if docker ps | grep -q financial-tracker-bot; then
            echo "Docker container started successfully"
            echo "Container status:"
            docker ps --filter name=financial-tracker-bot
            echo "Container logs (last 10 lines):"
            docker logs --tail 10 financial-tracker-bot
            echo "Health check:"
            curl -s http://localhost:7070/health || echo "Health endpoint not responding"
          else
            echo "Docker container failed to start"
            echo "All containers:"
            docker ps -a
            echo "Container logs:"
            docker logs financial-tracker-bot || echo "No logs available"
            exit 1
          fi
